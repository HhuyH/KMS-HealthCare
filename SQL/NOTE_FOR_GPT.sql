----------------------------------------------------------------1. Ng∆∞·ªùi d√πng & h·ªá th·ªëng------------------------------------------------------------------------
-- B·∫£ng l∆∞u th√¥ng tin t√†i kho·∫£n
CREATE TABLE users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,                   -- Kh√≥a ch√≠nh, ƒë·ªãnh danh ng∆∞·ªùi d√πng
    username VARCHAR(50) UNIQUE NOT NULL,                     -- T√™n ƒëƒÉng nh·∫≠p, kh√¥ng ƒë∆∞·ª£c tr√πng
    email VARCHAR(100) UNIQUE NOT NULL,                       -- Email ƒëƒÉng k√Ω, duy nh·∫•t
    phone_number VARCHAR(15) UNIQUE,                          -- S·ªë ƒëi·ªán tho·∫°i (n·∫øu c√≥), c≈©ng duy nh·∫•t
    password_hash VARCHAR(255) NOT NULL,                      -- M·∫≠t kh·∫©u ƒë√£ m√£ h√≥a
    role_id INT NOT NULL,                                     -- Li√™n k·∫øt ƒë·∫øn b·∫£ng roles
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,           -- Th·ªùi gian t·∫°o t√†i kho·∫£n
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,

    FOREIGN KEY (role_id) REFERENCES roles(role_id)                -- R√†ng bu·ªôc vai tr√≤ ng∆∞·ªùi d√πng
);

-- B·∫£ng l∆∞u vai tr√≤
CREATE TABLE roles (
    role_id INT AUTO_INCREMENT PRIMARY KEY,                   -- Kh√≥a ch√≠nh
    role_name VARCHAR(50) UNIQUE NOT NULL,                    -- T√™n vai tr√≤: patient, admin, doctor
	description TEXT										  -- 'M√¥ t·∫£ vai tr√≤ n·∫øu c·∫ßn',
);

-- Cho n√†y n√™n cho v√†o tr∆∞·ªõc v√†i role 
-- khi ƒëƒÉng k√Ω t√†i kho·∫£n b·∫•t k·ª≥ t√†i kho·∫£n n√†o c≈©ng s·∫Ω c√≥ role l√† patient
-- sau ƒë√≥ admin s·ªÖ set role cho b√°c sƒ© or admin m·ªõi n·∫øu c·∫ßn
-- role b√°c sƒ© s·∫Ω c√≥ kh√° nhi·ªÅu lo·∫°i... ho·∫∑c l√† ph√¢n trong chuy√™n khoa th√¥ng tin c·ªßa b√°c sƒ©
-- nh∆∞ng n·∫øu l√† nh∆∞ v·∫≠y th√¨ c√°ch g·ª≠i th√¥ng b√°o hi·ªán t·∫°i ko ·ªïn

-- B·∫£ng l∆∞u th√¥ng tin ng∆∞·ªùi d√πng
CREATE TABLE users_info (
    id INT AUTO_INCREMENT PRIMARY KEY,                        -- Kh√≥a ch√≠nh
    user_id INT NOT NULL,                                     -- Kh√≥a ngo·∫°i li√™n k·∫øt v·ªõi b·∫£ng users
    full_name VARCHAR(100),                                   -- H·ªç t√™n ƒë·∫ßy ƒë·ªß
    gender ENUM('Nam', 'N·ªØ', 'Kh√°c'),                         -- Gi·ªõi t√≠nh
    date_of_birth DATE,                                       -- Ng√†y sinh
    profile_picture VARCHAR(255),                             -- URL ·∫£nh ƒë·∫°i di·ªán (n·∫øu c√≥)
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,

    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE
);
-- Th√¥ng tin ng∆∞·ªùi d√πng c√≥ th·ªÉ do ch√≠nh ng∆∞·ªùi d√πng nh·∫≠p sau khi ƒëƒÉng k√Ω
-- ho·∫∑c l√† ƒë∆∞·ª£c AI chatbox thu nh·∫≠p th√¥ng qua vi·ªác chat v·ªõi ng∆∞·ªùi d√πng l√∫t ban ƒë·∫ßu c·∫ßn
-- v√≠ d·ª• n·∫øu ng∆∞·ªùi d√πng ƒë∆∞·ª£c AI y√™u c√¢u ƒëi kh√°m b√°c sƒ© v√† ng∆∞·ªùi d√πng ch·∫•p nh·∫≠n th√¨
-- AI s·∫Ω ki·ªÉm tra xem ng∆∞·ªùi d√πng c√≥ ƒë·∫ßy ƒë·ªß th√¥ng tin ch∆∞a n·∫øu ch∆∞a th√¨ s·∫Ω h·ªèi th√¥ng tin ng∆∞·ªùi d√πng
-- ho·∫∑c ki√™u ng∆∞·ªùi d√πng t·ª± nh·∫≠p v√† sau ƒë√≥ th√¨ h·ªèi nh∆∞ng c√¢u h·ªèi c·∫ßn thi·∫øt c·∫ßn ƒë·ªÉ ƒë·∫∑t l·ªãch kh√°m
-- nh∆∞ ng√†y kh√°m b√°c sƒ© mong mu·ªën n·∫øu ko bik th√¨ random ph√π h·ª£p v·ªõi b·ªánh mu·ªën kh√°m

-- s·∫Ω ƒë∆∞·ª£c t·∫°o khi ng∆∞·ªùi d√πng ch∆∞a c√≥ t√†i kho·∫£n v√† c√≥ nhu c·∫ßu ƒë·∫∑t l·ªãch kh√°m th√¨ 
-- AI s·∫Ω h·ªèi nh∆∞ng th√¥ng tin n√†y v√† th·ª±c hi·ªán ƒë·∫∑t l·ªãch kh√°m khi ƒë·∫ßy ƒë·ªß th√¥ng tin c·∫ßn thi·∫øt
-- v√† x√°c nh·∫≠n ƒë·∫∑t
CREATE TABLE guest_users (
    guest_id INT AUTO_INCREMENT PRIMARY KEY,
    full_name VARCHAR(255),
    phone VARCHAR(20),
    email VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
);

-- B·∫£ng l∆∞u ƒë·ªãa ch·ªâ ng∆∞·ªùi d√πng 
CREATE TABLE user_addresses (
    id INT AUTO_INCREMENT PRIMARY KEY,                -- Kh√≥a ch√≠nh, t·ª± ƒë·ªông tƒÉng
    user_id INT NOT NULL,                             -- ID ng∆∞·ªùi d√πng li√™n k·∫øt v·ªõi b·∫£ng users
    address_line VARCHAR(255) NOT NULL,               -- ƒê·ªãa ch·ªâ chi ti·∫øt: s·ªë nh√†, t√™n ƒë∆∞·ªùng, cƒÉn h·ªô...
    ward VARCHAR(100),                                -- Ph∆∞·ªùng/x√£
    district VARCHAR(100),                            -- Qu·∫≠n/huy·ªán
    city VARCHAR(100),                                -- Th√†nh ph·ªë
    postal_code VARCHAR(20),                          -- M√£ b∆∞u ch√≠nh (n·∫øu c√≥)
    country VARCHAR(100) DEFAULT 'Vietnam',           -- Qu·ªëc gia, m·∫∑c ƒë·ªãnh l√† Vi·ªát Nam
    is_default BOOLEAN DEFAULT FALSE,                 -- ƒê·ªãa ch·ªâ m·∫∑c ƒë·ªãnh (ch·ªâ 1 ƒë·ªãa ch·ªâ c·ªßa user l√† TRUE)
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,    -- Th·ªùi gian t·∫°o ƒë·ªãa ch·ªâ
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,  -- Th·ªùi gian c·∫≠p nh·∫≠t ƒë·ªãa ch·ªâ
    
    FOREIGN KEY (user_id) REFERENCES users(user_id)        -- Kh√≥a ngo·∫°i li√™n k·∫øt v·ªõi b·∫£ng users
);
-- b·∫£ng l∆∞u ƒë·ªãa ch·ªâ n√†y c≈©ng ko qu√° c·∫•n thi·∫øt nh∆∞ng n√≥ d√πng cho th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠
-- v√† 1 ng∆∞·ªùi c≈©ng c√≥ th·ªÉ c√≥ nhi·ªÅu ƒë·ªãa ch·ªâ

CREATE TABLE notifications (
    notification_id INT AUTO_INCREMENT PRIMARY KEY,           -- M√£ th√¥ng b√°o, t·ª± tƒÉng, d√πng l√†m kh√≥a ch√≠nh
    target_role_id INT,                                       -- ID c·ªßa vai tr√≤ ƒë∆∞·ª£c g·ª≠i th√¥ng b√°o n·∫øu ch·ªâ mu·ªën g·ª≠i t·ªõi 1 nh·ªëm ƒë·ªëi t∆∞·ªüng nh·∫•t ƒë·ªãnh
    title VARCHAR(255) NOT NULL,                              -- Ti√™u ƒë·ªÅ c·ªßa th√¥ng b√°o (ng·∫Øn g·ªçn)
    message TEXT NOT NULL,                                    -- N·ªôi dung chi ti·∫øt c·ªßa th√¥ng b√°o
    type VARCHAR(50),                                         -- Lo·∫°i th√¥ng b√°o: v√≠ d·ª• 'system', 'AI alert', 'reminder'...
    is_global BOOLEAN DEFAULT FALSE,                          -- N·∫øu l√† TRUE, th√¥ng b√°o s·∫Ω g·ª≠i ƒë·∫øn to√†n b·ªô ng∆∞·ªùi d√πng
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,            -- Th·ªùi gian t·∫°o th√¥ng b√°o
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP             -- Th·ªùi gian c·∫≠p nh·∫≠t th√¥ng b√°o (n·∫øu b·ªã ch·ªânh s·ª≠a)
        ON UPDATE CURRENT_TIMESTAMP,

    FOREIGN KEY (target_role_id) REFERENCES roles(role_id)   -- R√†ng bu·ªôc t·ªõi b·∫£ng roles
);

CREATE TABLE user_notifications (
    id INT AUTO_INCREMENT PRIMARY KEY,                        -- Kh√≥a ch√≠nh cho b·∫£ng √°nh x·∫°
    notification_id INT NOT NULL,                             -- ID c·ªßa th√¥ng b√°o (kh√≥a ngo·∫°i)
    user_id INT NOT NULL,                                     -- ID c·ªßa ng∆∞·ªùi d√πng nh·∫≠n th√¥ng b√°o
    is_read BOOLEAN DEFAULT FALSE,                            -- ƒê√£ ƒë·ªçc hay ch∆∞a (FALSE = ch∆∞a ƒë·ªçc)
    received_at DATETIME DEFAULT CURRENT_TIMESTAMP,           -- Th·ªùi ƒëi·ªÉm ng∆∞·ªùi d√πng nh·∫≠n th√¥ng b√°o

    FOREIGN KEY (notification_id) REFERENCES notifications(notification_id),   -- R√†ng bu·ªôc kh√≥a ngo·∫°i t·ªõi b·∫£ng th√¥ng b√°o
    FOREIGN KEY (user_id) REFERENCES users(user_id)                            -- R√†ng bu·ªôc kh√≥a ngo·∫°i t·ªõi b·∫£ng ng∆∞·ªùi d√πng
);

‚úÖ Logic khi g·ª≠i th√¥ng b√°o:
N·∫øu is_global = TRUE: L·∫•y t·∫•t c·∫£ ng∆∞·ªùi d√πng, insert v√†o user_notifications.

N·∫øu target_role IS NOT NULL: L·∫•y t·∫•t c·∫£ ng∆∞·ªùi d√πng c√≥ vai tr√≤ t∆∞∆°ng ·ª©ng (users.role = target_role), insert v√†o user_notifications.

N·∫øu g·ª≠i c√° nh√¢n: Insert 1 d√≤ng v√†o user_notifications v·ªõi user_id c·ª• th·ªÉ.

‚úÖ Giao di·ªán Admin G·ª≠i Th√¥ng B√°o (v√≠ d·ª•):
Ti√™u ƒë·ªÅ

N·ªôi dung

H√¨nh th·ª©c g·ª≠i:

üîò G·ª≠i to√†n h·ªá th·ªëng

üîò G·ª≠i theo vai tr√≤ ‚Üí Ch·ªçn vai tr√≤ (dropdown)

üîò G·ª≠i ng∆∞·ªùi d√πng c·ª• th·ªÉ ‚Üí Ch·ªçn user

‚Üí Backend s·∫Ω x·ª≠ l√Ω t√πy theo l·ª±a ch·ªçn, insert h·ª£p l√Ω v√†o user_notifications.

----------------------------------------------------------------2. ChƒÉm s√≥c s·ª©c kh·ªèe------------------------------------------------------------------------

-- B·∫£ng medical_categories: Ph√¢n lo·∫°i b·ªánh v√† chuy√™n khoa
CREATE TABLE medical_categories (
    category_id INT AUTO_INCREMENT PRIMARY KEY,       -- Kh√≥a ch√≠nh
    name VARCHAR(255) NOT NULL,                       -- T√™n chuy√™n khoa
    description TEXT,                                 -- M√¥ t·∫£
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP             -- Th·ªùi gian c·∫≠p nh·∫≠t th√¥ng b√°o (n·∫øu b·ªã ch·ªânh s·ª≠a)
        ON UPDATE CURRENT_TIMESTAMP
);

-- B·∫£ng diseases: Danh s√°ch c√°c b·ªánh
CREATE TABLE diseases (
    disease_id INT AUTO_INCREMENT PRIMARY KEY,        -- Kh√≥a ch√≠nh
    name VARCHAR(255) NOT NULL,                       -- T√™n b·ªánh
    description TEXT,                                 -- M√¥ t·∫£ v·ªÅ b·ªánh
    treatment_guidelines TEXT,                        -- H∆∞·ªõng d·∫´n ƒëi·ªÅu tr·ªã
    category_id INT,                                  -- Li√™n k·∫øt ƒë·∫øn chuy√™n khoa
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP             -- Th·ªùi gian c·∫≠p nh·∫≠t th√¥ng b√°o (n·∫øu b·ªã ch·ªânh s·ª≠a)
        ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (category_id) REFERENCES medical_categories(category_id)
);

-- B·∫£ng symptoms: Danh s√°ch c√°c tri·ªáu ch·ª©ng
CREATE TABLE symptoms (
    symptom_id INT AUTO_INCREMENT PRIMARY KEY,        -- Kh√≥a ch√≠nh
    name VARCHAR(255) NOT NULL,                       -- T√™n tri·ªáu ch·ª©ng
    description TEXT,                                 -- M√¥ t·∫£ tri·ªáu ch·ª©ng
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP             -- Th·ªùi gian c·∫≠p nh·∫≠t th√¥ng b√°o (n·∫øu b·ªã ch·ªânh s·ª≠a)
        ON UPDATE CURRENT_TIMESTAMP
);

-- B·∫£ng disease_symptoms: B·∫£ng n·ªëi gi·ªØa b·ªánh v√† tri·ªáu ch·ª©ng
CREATE TABLE disease_symptoms (
    disease_id INT NOT NULL,                          -- ID b·ªánh
    symptom_id INT NOT NULL,                          -- ID tri·ªáu ch·ª©ng
    PRIMARY KEY (disease_id, symptom_id),             -- Kh√≥a ch√≠nh k√©p
    FOREIGN KEY (disease_id) REFERENCES diseases(disease_id),
    FOREIGN KEY (symptom_id) REFERENCES symptoms(symptom_id)
);

-- B·∫£ng l∆∞u ti·ªÅn s·ª≠ tri·ªáu ch·ª©ng (b·∫£ng n√†y c√≥ th·ªÉ ƒë∆∞·ª£c b√°c sƒ© c·∫≠p nh·∫≠p ho·∫∑c AI c·∫≠p nh·∫≠p th√¥ng qua chat_log)
CREATE TABLE user_symptom_history (
    id INT AUTO_INCREMENT PRIMARY KEY,                   -- Kh√≥a ch√≠nh, t·ª± ƒë·ªông tƒÉng
    user_id INT NOT NULL,                                -- Kh√≥a ngo·∫°i li√™n h·∫øt t·ªõi user
    symptom_id INT NOT NULL,                             -- kh√≥a ngo·∫°i li√™n k·∫øt t·ªõi tri·ªáu ch·ª©ng
    record_date DATE NOT NULL,                           -- Ng√†y l∆∞u tri·ªáu ch·ª©ng
    notes TEXT,                                          -- Ghi ch·ªß chi ti·∫øt n·∫øu c√≥
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (symptom_id) REFERENCES symptoms(symptom_id)
);

-- record_date o day ko de auto vi neu benh nhan mioeu tra 
-- b·ªánh tr√¥ng qu√° kh∆∞ th√¨ c√≤n c√≥ th·ªÉ nh·∫≠p

-- B·∫£ng clinics: Danh s√°ch b·ªánh vi·ªán/ph√≤ng kh√°m
CREATE TABLE clinics (
    clinic_id INT AUTO_INCREMENT PRIMARY KEY,           -- Kh√≥a ch√≠nh
    name VARCHAR(255) NOT NULL,                         -- T√™n ph√≤ng kh√°m
    address TEXT NOT NULL,                              -- ƒê·ªãa ch·ªâ
    phone VARCHAR(20),                                  -- S·ªë ƒëi·ªán tho·∫°i li√™n h·ªá
    email VARCHAR(255),                                 -- Email (n·∫øu c√≥)
    description TEXT,                                   -- M√¥ t·∫£ chi ti·∫øt
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP             -- Th·ªùi gian c·∫≠p nh·∫≠t th√¥ng b√°o (n·∫øu b·ªã ch·ªânh s·ª≠a)
        ON UPDATE CURRENT_TIMESTAMP
);

-- B·∫£ng specialties: Chuy√™n ng√†nh y t·∫ø
CREATE TABLE specialties (
    specialty_id INT AUTO_INCREMENT PRIMARY KEY,        -- Kh√≥a ch√≠nh
    name VARCHAR(255) NOT NULL,                         -- T√™n chuy√™n ng√†nh (n·ªôi khoa, tim m·∫°ch‚Ä¶)
    description TEXT,                                   -- M√¥ t·∫£ chuy√™n ng√†nh
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP             -- Th·ªùi gian c·∫≠p nh·∫≠t th√¥ng b√°o (n·∫øu b·ªã ch·ªânh s·ª≠a)
        ON UPDATE CURRENT_TIMESTAMP
);

-- B·∫£ng doctors: Th√¥ng tin b√°c sƒ©
CREATE TABLE doctors (
    doctor_id INT AUTO_INCREMENT PRIMARY KEY,           -- Kh√≥a ch√≠nh
    user_id INT NOT NULL UNIQUE,                        -- Li√™n k·∫øt v·ªõi b·∫£ng users
    specialty_id INT NOT NULL,                          -- Li√™n k·∫øt ƒë·∫øn chuy√™n ng√†nh
    clinic_id INT,                                      -- Li√™n k·∫øt ƒë·∫øn ph√≤ng kh√°m
    biography TEXT,                                     -- Ti·ªÉu s·ª≠/b·∫±ng c·∫•p
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP             -- Th·ªùi gian c·∫≠p nh·∫≠t th√¥ng b√°o (n·∫øu b·ªã ch·ªânh s·ª≠a)
        ON UPDATE CURRENT_TIMESTAMP,
    
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (specialty_id) REFERENCES specialties(specialty_id),
    FOREIGN KEY (clinic_id) REFERENCES clinics(clinic_id)
);

-- B·∫£ng doctor_schedules: L·ªãch l√†m vi·ªác c·ªßa b√°c sƒ©
CREATE TABLE doctor_schedules (
    schedule_id INT AUTO_INCREMENT PRIMARY KEY,         -- Kh√≥a ch√≠nh
    doctor_id INT NOT NULL,                             -- Li√™n k·∫øt ƒë·∫øn b·∫£ng doctors
    clinic_id INT,                                      -- N∆°i l√†m vi·ªác
    day_of_week VARCHAR(20) NOT NULL,                   -- Th·ª© trong tu·∫ßn (Monday, Tuesday...)
    start_time TIME NOT NULL,                           -- Gi·ªù b·∫Øt ƒë·∫ßu
    end_time TIME NOT NULL,                             -- Gi·ªù k·∫øt th√∫c
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP             -- Th·ªùi gian c·∫≠p nh·∫≠t th√¥ng b√°o (n·∫øu b·ªã ch·ªânh s·ª≠a)
        ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (doctor_id) REFERENCES doctors(doctor_id),
    FOREIGN KEY (clinic_id) REFERENCES clinics(clinic_id)
);

-- B·∫£ng appointments: L·ªãch h·∫πn kh√°m b·ªánh cho ng∆∞·ªùi d√πng ƒë√£ c√≥ t√†i kho·∫£n
CREATE TABLE appointments (
    appointment_id INT AUTO_INCREMENT PRIMARY KEY,        -- Kh√≥a ch√≠nh
    user_id INT,                                 -- Li√™n k·∫øt ƒë·∫øn b·∫£ng users
    guest_id INT,
    doctor_id INT NOT NULL,                               -- Li√™n k·∫øt ƒë·∫øn b·∫£ng doctors
    clinic_id INT,                                        -- Li√™n k·∫øt ƒë·∫øn b·∫£ng clinics (ph√≤ng kh√°m)
    appointment_time DATETIME NOT NULL,                   -- Th·ªùi gian ƒë·∫∑t l·ªãch
    reason TEXT,                                          -- L√Ω do kh√°m b·ªánh
    status VARCHAR(50) DEFAULT 'pending',                 -- Tr·∫°ng th√°i: pending, confirmed, completed, canceled
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP             -- Th·ªùi gian c·∫≠p nh·∫≠t th√¥ng b√°o (n·∫øu b·ªã ch·ªânh s·ª≠a)
        ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (guest_id) REFERENCES guest_users(guest_id),
    FOREIGN KEY (doctor_id) REFERENCES doctors(doctor_id),
    FOREIGN KEY (clinic_id) REFERENCES clinics(clinic_id)
);

-- B·∫£ng prescriptions: ƒê∆°n thu·ªëc sau khi kh√°m
CREATE TABLE prescriptions (
    prescription_id INT AUTO_INCREMENT PRIMARY KEY,     -- Kh√≥a ch√≠nh
    appointment_id INT NOT NULL,                        -- Li√™n k·∫øt ƒë·∫øn l·ªãch h·∫πn
    prescribed_date DATE DEFAULT CURRENT_DATE,          -- Ng√†y k√™ ƒë∆°n
    medications TEXT,                                   -- Thu·ªëc (c√≥ th·ªÉ l∆∞u d·∫°ng JSON/text)
    notes TEXT,                                         -- Ghi ch√∫ d√πng thu·ªëc
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP             -- Th·ªùi gian c·∫≠p nh·∫≠t th√¥ng b√°o (n·∫øu b·ªã ch·ªânh s·ª≠a)
        ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (appointment_id) REFERENCES appointments(appointment_id)
);

-- B·∫£ng medical_records: Ghi ch√∫ kh√°m c·ªßa b√°c sƒ©
CREATE TABLE medical_records (
    med_rec_id INT AUTO_INCREMENT PRIMARY KEY,             -- Kh√≥a ch√≠nh
    appointment_id INT NOT NULL,                        -- Li√™n k·∫øt ƒë·∫øn cu·ªôc h·∫πn
    note_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,      -- Th·ªùi ƒëi·ªÉm ghi ch√∫
    diagnosis TEXT,                                     -- Ch·∫©n ƒëo√°n
    recommendations TEXT,                               -- H∆∞·ªõng d·∫´n/ch·ªâ ƒë·ªãnh
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (appointment_id) REFERENCES appointments(appointment_id)
);

----------------------------------------------------------------3. Chatbot AI-------------------------------------------------------------------------------
-- B·∫£ng l∆∞u d·ªØ li·ªáu s·ª©c kh·ªèe ƒë·ªãnh k·ª≥ c·ªßa ng∆∞·ªùi d√πng (c√¢n n·∫∑ng, huy·∫øt √°p, gi·∫•c ng·ªß, v.v.)
CREATE TABLE health_records (
    record_id INT AUTO_INCREMENT PRIMARY KEY,			 -- Kh√≥a ch√≠nh, t·ª± ƒë·ªông tƒÉng
    user_id INT NOT NULL,								 -- li√™n k·∫øt ƒë·∫øn b·∫£ng users
    record_date DATE NOT NULL,							 -- ng√†y ghi nh·∫≠n d·ªØ li·ªáu
    weight FLOAT,										 -- c√¢n n·∫∑ng (kg)
    blood_pressure VARCHAR(20),							 -- huy·∫øt √°p, vd: "120/80"
    sleep_hours FLOAT,									 -- s·ªë gi·ªù ng·ªß
    notes TEXT,											 -- ghi ch√∫ th√™m n·∫øu c√≥
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP             -- Th·ªùi gian c·∫≠p nh·∫≠t th√¥ng b√°o (n·∫øu b·ªã ch·ªânh s·ª≠a)
        ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

-- B·∫£ng l∆∞u h·ªôi tho·∫°i gi·ªØa ng∆∞·ªùi d√πng v√† chatbot AI
CREATE TABLE chat_logs (
    chat_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,									     -- ng∆∞·ªùi d√πng chat (c√≥ th·ªÉ null n·∫øu l√† kh√°ch)
    guest_id INT,					                     -- phi√™n chat c·ªßa kh√°ch (n·∫øu user_id null)
	intent VARCHAR(100),                                 -- √Ω ƒë·ªãnh
    message TEXT NOT NULL,                               -- n·ªôi dung tin nh·∫Øn
    sender ENUM('user', 'bot') NOT NULL,                 -- ng∆∞·ªùi g·ª≠i tin nh·∫Øn
    sent_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    CONSTRAINT chk_user_or_guest
        CHECK (
            (user_id IS NOT NULL AND guest_id IS NULL) OR
            (user_id IS NULL AND guest_id IS NOT NULL)
        ),

    FOREIGN KEY (guest_id) REFERENCES guest_users(guest_id),
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

-- B·∫£ng l∆∞u k·∫øt qu·∫£ d·ª± ƒëo√°n b·ªánh t·ª´ AI cho t·ª´ng l·∫ßn d·ª± ƒëo√°n
CREATE TABLE health_predictions (
    prediction_id INT AUTO_INCREMENT PRIMARY KEY,		 -- Kh√≥a ch√≠nh, t·ª± ƒë·ªông tƒÉng
    user_id INT NOT NULL,								 -- li√™n k·∫øt ƒë·∫øn ng∆∞·ªùi d√πng
	record_id INT NOT NULL,                                       -- li√™n k·∫øt ƒë·∫øn d·ªØ li·ªáu s·ª©c kh·ªèe c·ª• th·ªÉ
	chat_id INT,
    prediction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- th·ªùi gian d·ª± ƒëo√°n
    confidence_score FLOAT,                              -- ƒë·ªô tin c·∫≠y d·ª± ƒëo√°n (0-1)
    details TEXT,                                        -- chi ti·∫øt th√™m v·ªÅ d·ª± ƒëo√°n (json ho·∫∑c text)
    
    CHECK (confidence_score BETWEEN 0 AND 1),
    
    FOREIGN KEY (user_id) REFERENCES users(user_id),
	FOREIGN KEY (record_id) REFERENCES health_records(record_id),
	FOREIGN KEY (chat_id) REFERENCES chat_logs(chat_id)
);

CREATE TABLE prediction_diseases (
    id INT AUTO_INCREMENT PRIMARY KEY,
    prediction_id INT NOT NULL,
    disease_name VARCHAR(255) NOT NULL,
    confidence FLOAT,
    FOREIGN KEY (prediction_id) REFERENCES health_predictions(prediction_id)
);

-- B·∫£ng l∆∞u c√¢u h·ªèi v√† c√¢u tr·∫£ l·ªùi ƒë·ªÉ hu·∫•n luy·ªán ho·∫∑c ph·ª•c v·ª• chatbot
CREATE TABLE chatbot_knowledge_base (
    kb_id INT AUTO_INCREMENT PRIMARY KEY,
	intent VARCHAR(100),                                 -- √Ω ƒë·ªãnh
    question TEXT NOT NULL,                              -- c√¢u h·ªèi m·∫´u
    answer TEXT NOT NULL,                                -- c√¢u tr·∫£ l·ªùi t∆∞∆°ng ·ª©ng
    category VARCHAR(100),                               -- ph√¢n lo·∫°i c√¢u h·ªèi (t√πy ch·ªçn)
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP             -- Th·ªùi gian c·∫≠p nh·∫≠t th√¥ng b√°o (n·∫øu b·ªã ch·ªânh s·ª≠a)
        ON UPDATE CURRENT_TIMESTAMP
);
----------------------------------------------------------------4. Th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠-------------------------------------------------------------------------------
-- B·∫£ng product_categories: Danh m·ª•c s·∫£n ph·∫©m
CREATE TABLE product_categories (
    category_id INT AUTO_INCREMENT PRIMARY KEY,          -- Kh√≥a ch√≠nh
    name VARCHAR(255) NOT NULL,                          -- T√™n danh m·ª•c
    description TEXT,                                    -- M√¥ t·∫£ danh m·ª•c
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP             -- Th·ªùi gian c·∫≠p nh·∫≠t th√¥ng b√°o (n·∫øu b·ªã ch·ªânh s·ª≠a)
        ON UPDATE CURRENT_TIMESTAMP
);

-- B·∫£ng products: Danh s√°ch s·∫£n ph·∫©m
CREATE TABLE products (
    product_id INT AUTO_INCREMENT PRIMARY KEY,           -- Kh√≥a ch√≠nh
    category_id INT,                                     -- Li√™n k·∫øt ƒë·∫øn danh m·ª•c
    name VARCHAR(255) NOT NULL,                          -- T√™n s·∫£n ph·∫©m
    description TEXT,                                    -- M√¥ t·∫£ s·∫£n ph·∫©m
    price DECIMAL(16, 0) NOT NULL,                       -- Gi√°
    stock INT DEFAULT 0,                                 -- T·ªìn kho
    image_url TEXT,                                      -- ·∫¢nh s·∫£n ph·∫©m (n·∫øu c√≥)
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP             -- Th·ªùi gian c·∫≠p nh·∫≠t th√¥ng b√°o (n·∫øu b·ªã ch·ªânh s·ª≠a)
        ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (category_id) REFERENCES product_categories(category_id)
);

CREATE TABLE medicines (
    medicine_id INT PRIMARY KEY,                         -- Kh√≥a ch√≠nh, tr√πng v·ªõi product_id
    active_ingredient VARCHAR(255),                      -- Ho·∫°t ch·∫•t ch√≠nh
    dosage_form VARCHAR(100),                            -- D·∫°ng b√†o ch·∫ø (vi√™n, ·ªëng, g√≥i, ...)
    unit VARCHAR(50),                                    -- ƒê∆°n v·ªã t√≠nh: vi√™n, ml, ...
    usage_instructions TEXT,                             -- H∆∞·ªõng d·∫´n d√πng thu·ªëc
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP             -- Th·ªùi gian c·∫≠p nh·∫≠t th√¥ng b√°o (n·∫øu b·ªã ch·ªânh s·ª≠a)
        ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (medicine_id) REFERENCES products(product_id) ON DELETE CASCADE
);

CREATE TABLE prescription_products (
    id INT AUTO_INCREMENT PRIMARY KEY,                    -- Kh√≥a ch√≠nh
    prescription_id INT NOT NULL,                         -- Li√™n k·∫øt ƒë∆°n thu·ªëc
    product_id INT NULL,                                  -- C√≥ th·ªÉ NULL n·∫øu kh√¥ng r√µ m√£ s·∫£n ph·∫©m
    quantity INT NOT NULL,                                -- S·ªë l∆∞·ª£ng
    dosage TEXT,                                           -- Li·ªÅu d√πng
    usage_time TEXT,                                       -- Th·ªùi gian s·ª≠ d·ª•ng
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
        ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (prescription_id) REFERENCES prescriptions(prescription_id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES products(product_id) ON DELETE CASCADE
);



-- B·∫£ng product_reviews: Ng∆∞·ªùi d√πng ƒë√°nh gi√° s·∫£n ph·∫©m
CREATE TABLE product_reviews (
    review_id INT AUTO_INCREMENT PRIMARY KEY,            -- Kh√≥a ch√≠nh
    product_id INT NOT NULL,                             -- Li√™n k·∫øt ƒë·∫øn s·∫£n ph·∫©m
    user_id INT NOT NULL,                                -- Ng∆∞·ªùi ƒë√°nh gi√°
    rating INT CHECK (rating BETWEEN 1 AND 5),           -- S·ªë sao (1‚Äì5)
    comment TEXT,                                        -- Nh·∫≠n x√©t
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP             -- Th·ªùi gian c·∫≠p nh·∫≠t th√¥ng b√°o (n·∫øu b·ªã ch·ªânh s·ª≠a)
        ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (product_id) REFERENCES products(product_id),
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

-- B·∫£ng carts: Gi·ªè h√†ng t·∫°m th·ªùi
CREATE TABLE carts (
    cart_id INT AUTO_INCREMENT PRIMARY KEY,              -- Kh√≥a ch√≠nh
    user_id INT NOT NULL,                                -- Ng∆∞·ªùi d√πng
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP             -- Th·ªùi gian c·∫≠p nh·∫≠t th√¥ng b√°o (n·∫øu b·ªã ch·ªânh s·ª≠a)
        ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

-- B·∫£ng orders: ƒê∆°n h√†ng c·ªßa ng∆∞·ªùi d√πng
CREATE TABLE orders (
    order_id INT AUTO_INCREMENT PRIMARY KEY,             -- Kh√≥a ch√≠nh
    user_id INT NOT NULL,                                -- Ng∆∞·ªùi ƒë·∫∑t h√†ng
    address_id INT NOT NULL,                             -- Li√™n k·∫øt ƒë·∫øn b·∫£ng user_addresses
    order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,      -- Th·ªùi gian ƒë·∫∑t
    total DECIMAL(16, 0) NOT NULL,                       -- T·ªïng ti·ªÅn
    status VARCHAR(50) DEFAULT 'pending',                -- Tr·∫°ng th√°i ƒë∆°n h√†ng
    shipping_address TEXT NOT NULL,                      -- ƒê·ªãa ch·ªâ giao h√†ng
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (address_id) REFERENCES user_addresses(id)  -- Li√™n k·∫øt ƒë·ªãa ch·ªâ giao h√†ng
);

-- B·∫£ng order_items: Chi ti·∫øt t·ª´ng s·∫£n ph·∫©m trong ƒë∆°n h√†ng
CREATE TABLE order_items (
    item_id INT AUTO_INCREMENT PRIMARY KEY,              -- Kh√≥a ch√≠nh
    order_id INT NOT NULL,                               -- Li√™n k·∫øt ƒë·∫øn ƒë∆°n h√†ng
    product_id INT NOT NULL,                             -- S·∫£n ph·∫©m trong ƒë∆°n
    quantity INT NOT NULL,                               -- S·ªë l∆∞·ª£ng mua
    unit_price DECIMAL(16, 0) NOT NULL,                  -- Gi√° m·ªói s·∫£n ph·∫©m l√∫c mua
    FOREIGN KEY (order_id) REFERENCES orders(order_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);

-- B·∫£ng payments: Th√¥ng tin thanh to√°n ƒë∆°n h√†ng
CREATE TABLE payments (
    payment_id INT AUTO_INCREMENT PRIMARY KEY,             -- Kh√≥a ch√≠nh
    user_id INT,
    order_id INT NOT NULL,                                 -- Li√™n k·∫øt ƒë·∫øn ƒë∆°n h√†ng
    payment_method VARCHAR(50) NOT NULL,                   -- Ph∆∞∆°ng th·ª©c (VNPay, Momo, COD...)
    payment_status VARCHAR(50) DEFAULT 'pending',          -- pending, completed, failed
    amount DECIMAL(16, 0) NOT NULL,                        -- S·ªë ti·ªÅn thanh to√°n
    payment_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,      -- Th·ªùi gian thanh to√°n
    FOREIGN KEY (order_id) REFERENCES orders(order_id),
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

-- phan payments nay co le can xem xet theo cach lam cua backend

-- B·∫£ng invoices: Th√¥ng tin h√≥a ƒë∆°n
CREATE TABLE invoices (
    invoice_id INT AUTO_INCREMENT PRIMARY KEY,             -- Kh√≥a ch√≠nh
    COLUMN user_id INT
    order_id INT NOT NULL,                                 -- Li√™n k·∫øt ƒë·∫øn ƒë∆°n h√†ng
    invoice_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,      -- Ng√†y t·∫°o h√≥a ƒë∆°n
    total_amount DECIMAL(16, 0) NOT NULL,                  -- T·ªïng ti·ªÅn
    FOREIGN KEY (order_id) REFERENCES orders(order_id),
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

-- B·∫£ng invoice_details: Chi ti·∫øt s·∫£n ph·∫©m trong h√≥a ƒë∆°n
CREATE TABLE invoice_details (
    detail_id INT AUTO_INCREMENT PRIMARY KEY,              -- Kh√≥a ch√≠nh
    invoice_id INT NOT NULL,                               -- Li√™n k·∫øt ƒë·∫øn h√≥a ƒë∆°n
    product_id INT NOT NULL,                               -- S·∫£n ph·∫©m c·ª• th·ªÉ
    quantity INT NOT NULL,                                 -- S·ªë l∆∞·ª£ng
    unit_price DECIMAL(16, 0) NOT NULL,                    -- Gi√° ƒë∆°n v·ªã
    FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);


-------------------------------------------------------X√°c minh t√†i kho·∫£n--------------------------------------------------------------------------------------------------------------

-- Gi·∫£i th√≠ch
-- ch·ª©c nƒÉng n√†y y√™u c·∫ßu nh·∫≠p v√†o
-- usename or email
-- password ƒë√£ ƒë∆∞·ª£c hash ·ªü tr√¥ng backend
-- s√¢u ƒë√≥ s·∫Ω ƒë∆∞·ª£c chuy·ªÉn v·ªÅ sql v√† ki·ªÉm tra v√† sau ƒë√≥ tr·∫£ v·ªÅ backend v·ªõi json nh∆∞ sau
-- N·∫øu ƒë√∫ng pass
{
  "success": true, -- succes s·∫Ω tr·∫£ v·ªÅ true ho·∫∑c 1
  "user_id": 123,
  "role": "admin"
}
-- N·∫øu sai
{
  "success": false, -- succes s·∫Ω tr·∫£ v·ªÅ false ho·∫∑c 0
  "message": "Th√¥ng tin ƒëƒÉng nh·∫≠p kh√¥ng h·ª£p l·ªá"
}


DELIMITER $$

CREATE PROCEDURE login_user (
    IN input_username_or_email VARCHAR(100),
    IN input_password_hash VARCHAR(255)
)
BEGIN
    DECLARE user_id_result INT;
    DECLARE role_name_result VARCHAR(50);
    
    -- Truy v·∫•n ng∆∞·ªùi d√πng c√≥ t·ªìn t·∫°i kh√¥ng
    SELECT u.user_id, r.role_name
    INTO user_id_result, role_name_result
    FROM users u
    JOIN roles r ON u.role_id = r.role_id
    WHERE (u.username = input_username_or_email OR u.email = input_username_or_email)
      AND u.password_hash = input_password_hash
    LIMIT 1;

    -- N·∫øu t√¨m ƒë∆∞·ª£c th√¨ tr·∫£ k·∫øt qu·∫£
    IF user_id_result IS NOT NULL THEN
        SELECT TRUE AS success, user_id_result AS user_id, role_name_result AS role;
    ELSE
        SELECT FALSE AS success, NULL AS user_id, NULL AS role;
    END IF;
END$$

DELIMITER ;

-- password 123 ƒë∆∞·ª£c hash
$2b$12$KIX9W96S6PvuYcM1vHtrKuu6LSDuCMUCylKBD8eEkF2ZQDfMBzJwC
-- test proc login_user
CALL login_user('admin', '$2b$12$KIX9W96S6PvuYcM1vHtrKuu6LSDuCMUCylKBD8eEkF2ZQDfMBzJwC');


-------------------------------------------------------G·ªçi l·∫•y th√¥ng tin user--------------------------------------------------------------------------------------------------------------

-- G·ªçi proc n√†y s·∫Ω chuy·ªÅn to√†n b·ªô nh·ªØng info c·∫ßn thi·∫øt ƒë·ªÉ v·∫≠n h√†nh 
-- N·∫øu th√¥ng tin ƒëƒÉng nh·∫≠p email,username,phone sai th√¨ s·∫Ω ko th·ªÉ l·∫•y ƒë∆∞·ª£c b·∫•t k·ª≥ th√¥ng tin g√¨
-- N·∫øu ƒë√∫ng th√¨ s·∫Ω g·ª≠i nh·ªØng th√¥ng tin c·ªßa t√†i kho·∫£n ƒë√≥ v√† c·∫£ password ƒë√£ ƒë∆∞·ª£c hash 
-- Sau ƒë√≥ th√¨ backend s·∫Ω ki·ªÉm tra pass ƒë∆∞·ª£c g·ª≠i t·ª´ database v·ªõi v·ªõi pass ng∆∞·ªùi d√πng v·ª´a nh·∫≠p

DELIMITER $$

CREATE PROCEDURE get_user_info (
    IN input_login VARCHAR(100)
)
BEGIN
    SELECT u.user_id, u.username, u.email, u.password_hash, r.role_name
    FROM users u
    JOIN roles r ON u.role_id = r.role_id
    WHERE u.username = input_login OR u.email = input_login OR u.phone_number = input_login
    LIMIT 1;
END$$

DELIMITER ;


-------------------------------------------------------Ki·ªÉm tra tri·ªáu ch·ª©ng b·ªánh nh√¢n--------------------------------------------------------------------------------------------------------------

DELIMITER $$

CREATE PROCEDURE get_user_symptom_history(IN in_user_id INT)
BEGIN
    SELECT 
        u.full_name AS `H·ªç t√™n`,
        h.notes AS `Ghi ch√∫`,
        s.name AS `Tri·ªáu ch·ª©ng`
    FROM user_symptom_history h
    JOIN symptoms s ON h.symptom_id = s.symptom_id
    JOIN users_info u ON u.user_id = h.user_id
    WHERE h.user_id = in_user_id
    ORDER BY h.record_date;
END $$

DELIMITER ;


CALL get_user_symptom_history(4);


-------------------------------------------------------L·∫•y th√¥ng tin chi ti·∫øt c·ªßa 1 ng∆∞·ªùi d·ª±a tr√™n user_id--------------------------------------------------------------------------------------------------------------


DELIMITER $$

CREATE PROCEDURE get_user_details(IN in_user_id INT)
BEGIN
    SELECT 
        u.user_id AS `User ID`,
        u.username AS `Username`,
        u.email AS `Email`,
        u.phone_number AS `S·ªë ƒëi·ªán tho·∫°i`,
        r.role_name AS `Vai tr√≤`,
        ui.full_name AS `H·ªç t√™n`,
        ui.gender AS `Gi·ªõi t√≠nh`,
        ui.date_of_birth AS `Ng√†y sinh`,
        ui.profile_picture AS `·∫¢nh ƒë·∫°i di·ªán`,
        a.address_line AS `ƒê·ªãa ch·ªâ`,
        a.ward AS `Ph∆∞·ªùng/X√£`,
        a.district AS `Qu·∫≠n/Huy·ªán`,
        a.city AS `Th√†nh ph·ªë`,
        a.country AS `Qu·ªëc gia`,
        a.is_default AS `L√† ƒë·ªãa ch·ªâ m·∫∑c ƒë·ªãnh`
    FROM users u
    LEFT JOIN users_info ui ON u.user_id = ui.user_id
    LEFT JOIN roles r ON u.role_id = r.role_id
    LEFT JOIN user_addresses a ON u.user_id = a.user_id AND a.is_default = TRUE
    WHERE u.user_id = in_user_id;
END $$

DELIMITER ;


CALL get_user_details(2);


-------------------------------------------------------L·∫•y t·∫•t c·∫£ ƒë·ªãa ch·ªâ c·ªßa 1 ng∆∞·ªùi d·ª±a tr√™n user_id--------------------------------------------------------------------------------------------------------------

DELIMITER $$

CREATE PROCEDURE get_user_addresses(IN in_user_id INT)
BEGIN
    SELECT 
        a.id AS `ƒê·ªãa ch·ªâ ID`,
        a.address_line AS `ƒê·ªãa ch·ªâ`,
        a.ward AS `Ph∆∞·ªùng/X√£`,
        a.district AS `Qu·∫≠n/Huy·ªán`,
        a.city AS `Th√†nh ph·ªë`,
        a.postal_code AS `M√£ b∆∞u ch√≠nh`,
        a.country AS `Qu·ªëc gia`,
        a.is_default AS `L√† m·∫∑c ƒë·ªãnh`,
        a.created_at AS `Ng√†y t·∫°o`,
        a.updated_at AS `Ng√†y c·∫≠p nh·∫≠t`
    FROM user_addresses a
    WHERE a.user_id = in_user_id
    ORDER BY a.is_default DESC, a.updated_at DESC;
END $$
DELIMITER ;


CALL get_user_addresses(2);

-------------------------------------------------------L·∫•y t·∫•t c·∫£ ng∆∞·ªùi d√πng b·∫±ng role_id-------------------------------------------------------------------------------------------------------------

-- n·∫øu nh·∫≠p v√†o role t∆∞∆°ng ·ª©ng th√¨ s·∫Ω g·ªçi role t∆∞∆°ng ·ª©ng
-- n·∫øu call 
-- role_id = 0 l·∫•y t·∫•t c·∫£ ng∆∞·ªùi d√πng
-- role_id = 1 l·∫•y t·∫•t c·∫£ Admin
-- role_id = 2 l·∫•y t·∫•t c·∫£ Doctor
-- role_id = 3 l·∫•y t·∫•t c·∫£ Patient
DELIMITER $$

CREATE PROCEDURE get_all_users_by_role(IN input_role_id INT)
BEGIN
    SELECT 
        u.user_id,
        u.username,
        u.email,
        u.phone_number,
        r.role_name,
        ui.full_name,
        ui.gender,
        ui.date_of_birth,
        ua.address_line,
        ua.ward,
        ua.district,
        ua.city,
        ua.country,
        u.created_at
    FROM users u
    LEFT JOIN users_info ui ON u.user_id = ui.user_id
    LEFT JOIN roles r ON u.role_id = r.role_id
    LEFT JOIN user_addresses ua ON u.user_id = ua.user_id AND ua.is_default = TRUE
    WHERE (input_role_id = 0 OR u.role_id = input_role_id)
    ORDER BY u.user_id DESC;
END $$

DELIMITER ;

----------------------------------------------USERS----------------------------------------------------------------------------------------------------------------
INSERT INTO users (username, email, phone_number, password_hash, role_id, created_at)
VALUES
('admin', 'admin@gmail.com', '0123456789',
 '$2b$12$KIX9W96S6PvuYcM1vHtrKuu6LSDuCMUCylKBD8eEkF2ZQDfMBzJwC',--id 1
 1, NOW()),

('huy', 'hoanhuy12@gmail.com', '0999999999',
 '$2b$12$KIX9W96S6PvuYcM1vHtrKuu6LSDuCMUCylKBD8eEkF2ZQDfMBzJwC',--id 2
 1, NOW()),

('dr.hanh', 'docter@example.com', '0888888888',
 '$2b$12$KIX9W96S6PvuYcM1vHtrKuu6LSDuCMUCylKBD8eEkF2ZQDfMBzJwC',--id 3
 2, NOW());

('nguyenvana', 'vana@example.com', '0901234567',
 '$2b$12$KIX9W96S6PvuYcM1vHtrKuu6LSDuCMUCylKBD8eEkF2ZQDfMBzJwC',--id 4
 3, NOW());

('linh', 'linh@gmail.com', '0123466789',
 '$2b$12$KIX9W96S6PvuYcM1vHtrKuu6LSDuCMUCylKBD8eEkF2ZQDfMBzJwC',--id 6
 2, NOW()), 

----------------------------------------------GUEST_USERS----------------------------------------------------------------------------------------------------------------
INSERT INTO guest_users (full_name, phone, email)
VALUES
('Nguy·ªÖn VƒÉn A', '0909123456', 'nva@example.com'),
('Tr·∫ßn Th·ªã B', '0911234567', 'ttb@example.com'),
('L√™ VƒÉn C', '0922345678', 'lvc@example.com');

----------------------------------------------USERS_info----------------------------------------------------------------------------------------------------------------
INSERT INTO users_info (user_id, full_name, gender, date_of_birth)
VALUES
(1, 'Qu·∫£n tr·ªã vi√™n', 'Nam', '1990-01-01'),
(2, 'Huy', 'Nam', '1985-06-15'),
(3, 'Dr.Hand', 'n·ªØ', '2000-12-01');
(4, 'Nguy·ªÖn VƒÉn A', 'Nam', '1995-08-15');
(6, 'Dr.Linh', 'N·ªØ', '1995-08-15');

----------------------------------------------USERS_ADDRESSES----------------------------------------------------------------------------------------------------------------
INSERT INTO user_addresses (
    user_id, address_line, ward, district, city, postal_code, country, is_default
)
VALUES
-- Qu·∫£n tr·ªã vi√™n (user_id = 1)
(1, '123 Tr·∫ßn H∆∞ng ƒê·∫°o', 'Nguy·ªÖn C∆∞ Trinh', 'Qu·∫≠n 1', 'TP.HCM', '700000', 'Vietnam', TRUE),

-- H√≤a Huy (user_id = 2)
(2, '456 L√™ L·ª£i', 'B·∫øn Ngh√©', 'Qu·∫≠n 1', 'TP.HCM', '700000', 'Vietnam', TRUE),
(2, '111 ƒê∆∞·ªùng long', 'B·∫øn Ngh√©', 'Qu·∫≠n 11', 'TP.HCM', '110000', 'Vietnam', TRUE),

-- John Doe (user_id = 3)
(3, '789 L√Ω Th∆∞·ªùng Ki·ªát', 'Ph∆∞·ªùng 7', 'Qu·∫≠n 10', 'TP.HCM', '700000', 'Vietnam', TRUE);

-- Nguy·ªÖn vƒÉn A (user_id=4)
(4, '123 ƒê∆∞·ªùng L√Ω Th∆∞·ªùng Ki·ªát', 'Ph∆∞·ªùng 7', 'Qu·∫≠n 10', 'TP.HCM', '70000', TRUE);

-------------------------------------------------------medical_categories--------------------------------------------------------------------------------------------------------------
INSERT INTO medical_categories (name, description) VALUES
('Tim m·∫°ch', 'Chuy√™n khoa li√™n quan ƒë·∫øn tim v√† m·∫°ch m√°u'),
('H√¥ h·∫•p', 'Chuy√™n khoa v·ªÅ ph·ªïi v√† h·ªá h√¥ h·∫•p'),
('Ti√™u h√≥a', 'Chuy√™n khoa v·ªÅ d·∫° d√†y, ru·ªôt, gan...'),
('Th·∫ßn kinh', 'Chuy√™n khoa v·ªÅ n√£o v√† h·ªá th·∫ßn kinh'),
('Da li·ªÖu', 'Chuy√™n khoa v·ªÅ da, t√≥c v√† m√≥ng');


-------------------------------------------------------diseases--------------------------------------------------------------------------------------------------------------

INSERT INTO diseases (name, description, treatment_guidelines, category_id) VALUES
('TƒÉng huy·∫øt √°p', 'Huy·∫øt √°p cao m√£n t√≠nh', 'Theo d√µi huy·∫øt √°p th∆∞·ªùng xuy√™n, d√πng thu·ªëc h·∫° √°p', 1),
('ƒê·ªôt qu·ªµ', 'R·ªëi lo·∫°n tu·∫ßn ho√†n n√£o nghi√™m tr·ªçng', 'Can thi·ªáp y t·∫ø kh·∫©n c·∫•p, ph·ª•c h·ªìi ch·ª©c nƒÉng', 1),
('Hen suy·ªÖn', 'B·ªánh m√£n t√≠nh ·∫£nh h∆∞·ªüng ƒë·∫øn ƒë∆∞·ªùng th·ªü', 'S·ª≠ d·ª•ng thu·ªëc gi√£n ph·∫ø qu·∫£n v√† ki·ªÉm so√°t d·ªã ·ª©ng', 2),
('Vi√™m ph·ªïi', 'Nhi·ªÖm tr√πng ph·ªïi do vi khu·∫©n ho·∫∑c virus', 'Kh√°ng sinh, ngh·ªâ ng∆°i v√† ƒëi·ªÅu tr·ªã h·ªó tr·ª£', 2),
('Vi√™m d·∫° d√†y', 'Vi√™m l·ªõp ni√™m m·∫°c d·∫° d√†y', 'Tr√°nh th·ª©c ƒÉn cay, d√πng thu·ªëc kh√°ng acid', 3),
('X∆° gan', 'T·ªïn th∆∞∆°ng gan m·∫°n t√≠nh', 'Ki·ªÉm so√°t nguy√™n nh√¢n, ch·∫ø ƒë·ªô ƒÉn v√† theo d√µi y t·∫ø', 3),
('ƒê·ªông kinh', 'R·ªëi lo·∫°n th·∫ßn kinh g√¢y co gi·∫≠t l·∫∑p l·∫°i', 'D√πng thu·ªëc ch·ªëng ƒë·ªông kinh, theo d√µi ƒëi·ªán n√£o ƒë·ªì', 4),
('Tr·∫ßm c·∫£m', 'R·ªëi lo·∫°n t√¢m tr·∫°ng k√©o d√†i', 'Li·ªáu ph√°p t√¢m l√Ω v√† thu·ªëc ch·ªëng tr·∫ßm c·∫£m', 4),
('Vi√™m da c∆° ƒë·ªãa', 'B·ªánh da m√£n t√≠nh g√¢y ng·ª©a v√† ph√°t ban', 'D∆∞·ª°ng ·∫©m, thu·ªëc b√¥i ch·ªëng vi√™m', 5),
('N·∫•m da', 'Nhi·ªÖm tr√πng da do n·∫•m', 'Thu·ªëc kh√°ng n·∫•m d·∫°ng b√¥i ho·∫∑c u·ªëng', 5);


-------------------------------------------------------symptoms--------------------------------------------------------------------------------------------------------------
INSERT INTO symptoms (name, description) VALUES
('ƒêau ƒë·∫ßu', 'C·∫£m gi√°c ƒëau ·ªü v√πng ƒë·∫ßu ho·∫∑c c·ªï'),
('Kh√≥ th·ªü', 'Kh√≥ khƒÉn trong vi·ªác h√≠t th·ªü b√¨nh th∆∞·ªùng'),
('Bu·ªìn n√¥n', 'C·∫£m gi√°c mu·ªën n√¥n m·ª≠a'),
('S·ªët', 'Nhi·ªát ƒë·ªô c∆° th·ªÉ cao h∆°n b√¨nh th∆∞·ªùng'),
('T·ª©c ng·ª±c', 'C·∫£m gi√°c ƒëau ho·∫∑c √°p l·ª±c ·ªü ng·ª±c'),
('M·ªát m·ªèi', 'C·∫£m gi√°c ki·ªát s·ª©c, thi·∫øu nƒÉng l∆∞·ª£ng'),
('Co gi·∫≠t', 'Chuy·ªÉn ƒë·ªông kh√¥ng ki·ªÉm so√°t c·ªßa c∆°'),
('Ng·ª©a da', 'C·∫£m gi√°c ch√¢m ch√≠ch khi·∫øn mu·ªën g√£i'),
('Ph√°t ban', 'V√πng da b·ªã n·ªïi m·∫©n ƒë·ªè ho·∫∑c s∆∞ng'),
('Ch√°n ƒÉn', 'M·∫•t c·∫£m gi√°c th√®m ƒÉn');


-------------------------------------------------------li√™n k·∫øt diseases v·ªõi symptoms--------------------------------------------------------------------------------------------------------------
-- TƒÉng huy·∫øt √°p
INSERT INTO disease_symptoms (disease_id, symptom_id) VALUES
(1, 1), -- ƒêau ƒë·∫ßu
(1, 5), -- T·ª©c ng·ª±c
(1, 6); -- M·ªát m·ªèi

-- ƒê·ªôt qu·ªµ
INSERT INTO disease_symptoms (disease_id, symptom_id) VALUES
(2, 1),
(2, 6),
(2, 7); -- Co gi·∫≠t

-- Hen suy·ªÖn
INSERT INTO disease_symptoms (disease_id, symptom_id) VALUES
(3, 2),
(3, 5),
(3, 6);

-- Vi√™m ph·ªïi
INSERT INTO disease_symptoms (disease_id, symptom_id) VALUES
(4, 2),
(4, 4),
(4, 6);

-- Vi√™m d·∫° d√†y
INSERT INTO disease_symptoms (disease_id, symptom_id) VALUES
(5, 3),
(5, 4),
(5, 10); -- Ch√°n ƒÉn

-- X∆° gan
INSERT INTO disease_symptoms (disease_id, symptom_id) VALUES
(6, 6),
(6, 10);

-- ƒê·ªông kinh
INSERT INTO disease_symptoms (disease_id, symptom_id) VALUES
(7, 1),
(7, 7);

-- Tr·∫ßm c·∫£m
INSERT INTO disease_symptoms (disease_id, symptom_id) VALUES
(8, 6),
(8, 10);

-- Vi√™m da c∆° ƒë·ªãa
INSERT INTO disease_symptoms (disease_id, symptom_id) VALUES
(9, 8),
(9, 9);

-- N·∫•m da
INSERT INTO disease_symptoms (disease_id, symptom_id) VALUES
(10, 8),
(10, 9);

-------------------------------------------------------L·ªãch s·ª≠ chi·ªáu ch·ª©ng c·ªßa b√™nh nh√¢n Nguy·ªÖn VƒÉn A user_id = 4--------------------------------------------------------------------------------------------------------------
INSERT INTO user_symptom_history (user_id, symptom_id, record_date, notes) VALUES
(4, 4, '2025-05-18', 'S·ªët cao 39 ƒë·ªô, k√©o d√†i 2 ng√†y'),
(4, 1, '2025-05-18', 'ƒêau ƒë·∫ßu √¢m ·ªâ v√πng tr√°n v√† sau g√°y'),
(4, 2, '2025-05-19', 'Kh√≥ th·ªü nh·∫π, ƒë·∫∑c bi·ªát khi leo c·∫ßu thang'),
(4, 6, '2025-05-20', 'C·∫£m th·∫•y m·ªát m·ªèi su·ªët c·∫£ ng√†y'),
(4, 5, '2025-05-21', 'C·∫£m gi√°c t·ª©c ng·ª±c nh·∫π khi h√≠t s√¢u');

-------------------------------------------------------Ph√≤ng kh√°m--------------------------------------------------------------------------------------------------------------
INSERT INTO clinics (name, address, phone, email, description) VALUES
('Ph√≤ng kh√°m ƒêa khoa H√≤a H·∫£o', '254 H√≤a H·∫£o, Qu·∫≠n 10, TP.HCM', '02838553085', 'hoahao@example.com', 'Ph√≤ng kh√°m t∆∞ nh√¢n uy t√≠n v·ªõi nhi·ªÅu chuy√™n khoa.'),
('B·ªánh vi·ªán Ch·ª£ R·∫´y', '201B Nguy·ªÖn Ch√≠ Thanh, Qu·∫≠n 5, TP.HCM', '02838554137', 'choray@hospital.vn', 'B·ªánh vi·ªán tuy·∫øn trung ∆∞∆°ng chuy√™n ƒëi·ªÅu tr·ªã c√°c ca n·∫∑ng.'),
('Ph√≤ng kh√°m Qu·ªëc t·∫ø Victoria Healthcare', '79 ƒêi·ªán Bi√™n Ph·ªß, Qu·∫≠n 1, TP.HCM', '02839101717', 'info@victoriavn.com', 'D·ªãch v·ª• kh√°m ch·ªØa b·ªánh theo ti√™u chu·∫©n qu·ªëc t·∫ø.'),
('B·ªánh vi·ªán ƒê·∫°i h·ªçc Y D∆∞·ª£c', '215 H·ªìng B√†ng, Qu·∫≠n 5, TP.HCM', '02838552307', 'contact@umc.edu.vn', 'B·ªánh vi·ªán tr·ª±c thu·ªôc ƒê·∫°i h·ªçc Y D∆∞·ª£c TP.HCM.'),
('Ph√≤ng kh√°m ƒëa khoa Pasteur', '27 Nguy·ªÖn Th·ªã Minh Khai, Qu·∫≠n 1, TP.HCM', '02838232299', 'pasteurclinic@vnmail.com', 'Chuy√™n n·ªôi t·ªïng qu√°t, tim m·∫°ch, ti√™u h√≥a.');

---------------------------------------------------------------------------------Khoa--------------------------------------------------------------------------------------------------------------
INSERT INTO specialties (name, description) VALUES
('N·ªôi khoa', 'Ch·∫©n ƒëo√°n v√† ƒëi·ªÅu tr·ªã kh√¥ng ph·∫´u thu·∫≠t c√°c b·ªánh l√Ω n·ªôi t·∫°ng.'),
('Ngo·∫°i khoa', 'Ch·∫©n ƒëo√°n v√† ƒëi·ªÅu tr·ªã b·ªánh th√¥ng qua ph·∫´u thu·∫≠t.'),
('Tai - M≈©i - H·ªçng', 'Kh√°m v√† ƒëi·ªÅu tr·ªã c√°c b·ªánh l√Ω v·ªÅ tai, m≈©i v√† h·ªçng.'),
('Tim m·∫°ch', 'Chuy√™n ƒëi·ªÅu tr·ªã b·ªánh v·ªÅ tim v√† h·ªá tu·∫ßn ho√†n.'),
('Nhi khoa', 'ChƒÉm s√≥c v√† ƒëi·ªÅu tr·ªã cho tr·∫ª em t·ª´ s∆° sinh ƒë·∫øn 15 tu·ªïi.'),
('Da li·ªÖu', 'Ch·∫©n ƒëo√°n v√† ƒëi·ªÅu tr·ªã c√°c b·ªánh v·ªÅ da, t√≥c v√† m√≥ng.'),
('Ti√™u h√≥a', 'Chuy√™n v·ªÅ h·ªá ti√™u h√≥a nh∆∞ d·∫° d√†y, gan, ru·ªôt.'),
('Th·∫ßn kinh', 'Kh√°m v√† ƒëi·ªÅu tr·ªã c√°c b·ªánh v·ªÅ h·ªá th·∫ßn kinh trung ∆∞∆°ng v√† ngo·∫°i bi√™n.');

---------------------------------------------------------------------------------B√°c sƒ©---------------------------------------------------------------------------------------------------------------------
-- user_id = 3 l√† b√°c sƒ© N·ªôi khoa t·∫°i Ph√≤ng kh√°m ƒêa khoa H√≤a H·∫£o
-- user_id = 6 l√† b√°c sƒ© Tim m·∫°ch t·∫°i B·ªánh vi·ªán Ch·ª£ R·∫´y

INSERT INTO doctors (user_id, specialty_id, clinic_id, biography)
VALUES
(3, 1, 1, 'B√°c sƒ© N·ªôi khoa v·ªõi h∆°n 10 nƒÉm kinh nghi·ªám trong ƒëi·ªÅu tr·ªã ti·ªÉu ƒë∆∞·ªùng, huy·∫øt √°p. T·ªët nghi·ªáp ƒê·∫°i h·ªçc Y D∆∞·ª£c TP.HCM.'),
(6, 4, 2, 'B√°c sƒ© Tim m·∫°ch t·ª´ng c√¥ng t√°c t·∫°i Vi·ªán Tim TP.HCM. C√≥ b·∫±ng Th·∫°c sƒ© Y khoa t·ª´ ƒê·∫°i h·ªçc Paris, Ph√°p.');

---------------------------------------------------------------------------------L·ªãch l√†m vi·ªác b√°c sƒ©---------------------------------------------------------------------------------------------------------------------
-- L·ªãch b√°c sƒ© N·ªôi khoa (doctor_id = 1) t·∫°i ph√≤ng kh√°m 1
INSERT INTO doctor_schedules (doctor_id, clinic_id, day_of_week, start_time, end_time)
VALUES
(1, 1, 'Monday', '08:00:00', '12:00:00'),
(1, 1, 'Wednesday', '08:00:00', '12:00:00'),
(1, 1, 'Friday', '13:30:00', '17:30:00');

-- L·ªãch b√°c sƒ© Tim m·∫°ch (doctor_id = 2) t·∫°i ph√≤ng kh√°m 2
INSERT INTO doctor_schedules (doctor_id, clinic_id, day_of_week, start_time, end_time)
VALUES
(2, 2, 'Tuesday', '09:00:00', '12:00:00'),
(2, 2, 'Thursday', '14:00:00', '18:00:00'),
(2, 2, 'Saturday', '08:30:00', '11:30:00');

---------------------------------------------------------------------------------ƒê·∫∑t l·ªãch kh√°m---------------------------------------------------------------------------------------------------------------------

-- user_id = 4 ƒë·∫∑t kh√°m b√°c sƒ© N·ªôi khoa (user_id = 3, doctor_id = 1) t·∫°i Ph√≤ng kh√°m ƒêa khoa H√≤a H·∫£o
INSERT INTO appointments (user_id, doctor_id, clinic_id, appointment_time, reason, status)
VALUES 
(4, 1, 1, '2025-05-28 09:00:00', 'Kh√°m huy·∫øt √°p v√† m·ªát m·ªèi k√©o d√†i', 'confirmed'),
(4, 1, 1, '2025-06-01 14:30:00', 'Theo d√µi ti·ªÉu ƒë∆∞·ªùng ƒë·ªãnh k·ª≥', 'pending');

-- guest_id = 1 kh√°m N·ªôi khoa (doctor_id = 1) t·∫°i Ph√≤ng kh√°m ƒêa khoa H√≤a H·∫£o
-- guest_id = 2 kh√°m Tim m·∫°ch (doctor_id = 2) t·∫°i B·ªánh vi·ªán Ch·ª£ R·∫´y
-- guest_id = 3 kh√°m Tim m·∫°ch (doctor_id = 2) t·∫°i B·ªánh vi·ªán Ch·ª£ R·∫´y

INSERT INTO appointments (guest_id, doctor_id, clinic_id, appointment_time, reason, status)
VALUES
(1, 1, 1, '2025-05-25 10:00:00', 'ƒêau ƒë·∫ßu v√† cao huy·∫øt √°p g·∫ßn ƒë√¢y', 'confirmed'),
(2, 2, 2, '2025-05-27 08:00:00', 'Kh√≥ th·ªü, nghi ng·ªù b·ªánh tim', 'pending'),
(3, 2, 2, '2025-05-29 15:00:00', 'ƒê·∫∑t l·ªãch ki·ªÉm tra tim ƒë·ªãnh k·ª≥', 'canceled');

---------------------------------------------------------------------------------ƒê∆°n thu·ªëc---------------------------------------------------------------------------------------------------------------------

-- ƒê∆°n thu·ªëc cho l·ªãch h·∫πn c·ªßa user_id = 4 (appointment_id = 1 v√† 2)
INSERT INTO prescriptions (appointment_id, prescribed_date, medications, notes)
VALUES
(1, '2025-05-28', '[
  {"name": "Thu·ªëc h·∫° √°p Amlodipine", "dosage": "5mg", "frequency": "1 vi√™n/ng√†y"},
  {"name": "Paracetamol", "dosage": "500mg", "frequency": "2 vi√™n/ng√†y khi ƒëau ƒë·∫ßu"}
]', 'U·ªëng v√†o bu·ªïi s√°ng sau ƒÉn. Tr√°nh d√πng v·ªõi r∆∞·ª£u bia.'),

(2, '2025-06-01', '[
  {"name": "Metformin", "dosage": "500mg", "frequency": "2 l·∫ßn/ng√†y"},
  {"name": "Glimepiride", "dosage": "2mg", "frequency": "1 l·∫ßn/ng√†y tr∆∞·ªõc ƒÉn s√°ng"}
]', 'Ki·ªÉm tra ƒë∆∞·ªùng huy·∫øt tr∆∞·ªõc m·ªói l·∫ßn d√πng thu·ªëc.');

-- ƒê∆°n thu·ªëc cho kh√°ch v√£ng lai guest_id = 1 (appointment_id = 3)
INSERT INTO prescriptions (appointment_id, prescribed_date, medications, notes)
VALUES
(3, '2025-05-25', '[
  {"name": "Losartan", "dosage": "50mg", "frequency": "1 vi√™n m·ªói s√°ng"},
  {"name": "Vitamin B1", "dosage": "100mg", "frequency": "1 vi√™n/ng√†y"}
]', 'T√°i kh√°m sau 1 tu·∫ßn n·∫øu tri·ªáu ch·ª©ng kh√¥ng gi·∫£m.');

---------------------------------------------------------------------------------Ghi ch√∫ c·ªßa b√°c sƒ©---------------------------------------------------------------------------------------------------------------------

-- Ghi ch√∫ kh√°m c·ªßa b√°c sƒ© cho c√°c l·ªãch h·∫πn c·ªßa user_id = 4
INSERT INTO medical_records (appointment_id, diagnosis, recommendations)
VALUES
(1, 'TƒÉng huy·∫øt √°p giai ƒëo·∫°n 1', 'C·∫ßn ƒëi·ªÅu ch·ªânh ch·∫ø ƒë·ªô ƒÉn v√† t·∫≠p th·ªÉ d·ª•c. U·ªëng thu·ªëc ƒë·ªÅu ƒë·∫∑n.'),
(2, 'Ti·ªÉu ƒë∆∞·ªùng tu√Ωp 2', 'Ki·ªÉm tra HbA1c 3 th√°ng/l·∫ßn. H·∫°n ch·∫ø ƒë∆∞·ªùng v√† tinh b·ªôt.');

-- Ghi ch√∫ kh√°m cho kh√°ch guest_id = 1
INSERT INTO medical_records (appointment_id, diagnosis, recommendations)
VALUES
(3, 'Cao huy·∫øt √°p do cƒÉng th·∫≥ng', 'Ngh·ªâ ng∆°i h·ª£p l√Ω, tr√°nh th·ª©c khuya. Theo d√µi huy·∫øt √°p h√†ng ng√†y.');

----------------------------------------------------------------4. Th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠-------------------------------------------------------------------------------

--üóÇÔ∏è product_categories: Danh m·ª•c s·∫£n ph·∫©m
INSERT INTO product_categories (name, description) VALUES
('Thu·ªëc ƒëi·ªÅu tr·ªã', 'C√°c lo·∫°i thu·ªëc d√πng ƒë·ªÉ ƒëi·ªÅu tr·ªã b·ªánh l√Ω.'),
('Th·ª±c ph·∫©m ch·ª©c nƒÉng', 'S·∫£n ph·∫©m h·ªó tr·ª£ tƒÉng c∆∞·ªùng s·ª©c kh·ªèe.'),
('Thi·∫øt b·ªã y t·∫ø', 'C√°c thi·∫øt b·ªã v√† d·ª•ng c·ª• y t·∫ø s·ª≠ d·ª•ng trong ch·∫©n ƒëo√°n v√† ƒëi·ªÅu tr·ªã.'),
('V·∫≠t t∆∞ ti√™u hao', 'GƒÉng tay, kh·∫©u trang, b√¥ng bƒÉng,... s·ª≠ d·ª•ng m·ªôt l·∫ßn.');

--üì¶ products: Danh s√°ch s·∫£n ph·∫©m
INSERT INTO products (category_id, name, description, price, stock, image_url)
VALUES
(1, 'Paracetamol 500mg', 'Thu·ªëc h·∫° s·ªët, gi·∫£m ƒëau th∆∞·ªùng d√πng.', 15000, 100, 'https://example.com/images/paracetamol.jpg'),
(1, 'Amoxicillin 500mg', 'Kh√°ng sinh ph·ªï r·ªông nh√≥m penicillin.', 28000, 60, 'https://example.com/images/amoxicillin.jpg'),
(2, 'Vitamin C 1000mg', 'H·ªó tr·ª£ tƒÉng c∆∞·ªùng ƒë·ªÅ kh√°ng.', 50000, 200, 'https://example.com/images/vitaminC.jpg'),
(3, 'M√°y ƒëo huy·∫øt √°p ƒëi·ªán t·ª≠', 'Thi·∫øt b·ªã ƒëo huy·∫øt √°p t·∫°i nh√†.', 650000, 15, 'https://example.com/images/blood_pressure_monitor.jpg'),
(4, 'Kh·∫©u trang y t·∫ø 4 l·ªõp', 'H·ªôp 50 c√°i, ƒë·∫°t chu·∫©n kh√°ng khu·∫©n.', 40000, 500, 'https://example.com/images/face_mask.jpg');

------------------------------------------------------------üíä medicines: Th√¥ng tin chi ti·∫øt thu·ªëc (ch·ªâ √°p d·ª•ng v·ªõi s·∫£n ph·∫©m l√† thu·ªëc)------------------------------------------------------------------------------------
INSERT INTO medicines (medicine_id, active_ingredient, dosage_form, unit, usage_instructions)
VALUES
(1, 'Paracetamol', 'Vi√™n n√©n', 'vi√™n', 'U·ªëng 1‚Äì2 vi√™n m·ªói 4‚Äì6 gi·ªù n·∫øu c·∫ßn. Kh√¥ng d√πng qu√° 8 vi√™n/ng√†y.'),
(2, 'Amoxicillin', 'Vi√™n nang', 'vi√™n', 'U·ªëng 1 vi√™n m·ªói 8 gi·ªù, duy tr√¨ trong 5‚Äì7 ng√†y.');

--------------------------------------------------- prescription_products: S·∫£n ph·∫©m th·ª±c t·∫ø ƒë∆∞·ª£c k√™ trong ƒë∆°n thu·ªëc------------------------------------------------------------------------------------
-- ƒê∆°n thu·ªëc 1 (c·ªßa user_id = 4, appointment_id = 1)
INSERT INTO prescription_products (prescription_id, product_id, quantity, dosage, usage_time)
VALUES
(1, 1, 10, '500mg', '2 vi√™n/ng√†y khi ƒëau ƒë·∫ßu'),    -- Paracetamol
(1, NULL, 7, '5mg', '1 vi√™n/ng√†y');                -- Amlodipine ch∆∞a c√≥ trong products, c√≥ th·ªÉ l√† thu·ªëc ngo√†i danh m·ª•c

-- ƒê∆°n thu·ªëc 2 (c·ªßa user_id = 4, appointment_id = 2)
INSERT INTO prescription_products (prescription_id, product_id, quantity, dosage, usage_time)
VALUES
(2, NULL, 14, '500mg', '2 l·∫ßn/ng√†y'),              -- Metformin, kh√¥ng c√≥ trong b·∫£ng `products`
(2, NULL, 7, '2mg', '1 l·∫ßn/ng√†y tr∆∞·ªõc ƒÉn s√°ng');   -- Glimepiride, c≈©ng kh√¥ng c√≥ trong b·∫£ng `products`

-- ƒê∆°n thu·ªëc 3 (c·ªßa guest_id = 1, appointment_id = 3)
INSERT INTO prescription_products (prescription_id, product_id, quantity, dosage, usage_time)
VALUES
(3, NULL, 7, '50mg', '1 vi√™n m·ªói s√°ng'),           -- Losartan
(3, NULL, 7, '100mg', '1 vi√™n/ng√†y');              -- Vitamin B1


-------------------------------------------------------------------------------------- product_reviews------------------------------------------------------------------------------------
-- Huy (user_id = 2) ƒë√°nh gi√° Paracetamol (product_id = 1)
INSERT INTO product_reviews (product_id, user_id, rating, comment)
VALUES
(1, 2, 5, 'Thu·ªëc gi·∫£m ƒëau hi·ªáu qu·∫£, √≠t t√°c d·ª•ng ph·ª•.'),

-- Huy (user_id = 2) ƒë√°nh gi√° Amoxicillin (product_id = 2)
(2, 2, 4, 'T·ªët nh∆∞ng g√¢y bu·ªìn n√¥n nh·∫π.'),

-- Admin (user_id = 1) ƒë√°nh gi√° m√°y ƒëo huy·∫øt √°p (product_id = 4)
(4, 1, 5, 'D·ªÖ s·ª≠ d·ª•ng v√† r·∫•t ch√≠nh x√°c.'),

-- Ng∆∞·ªùi d√πng "dr.hanh" (user_id = 3) ƒë√°nh gi√° Vitamin C (product_id = 3)
(3, 3, 4, 'Kh√° ·ªïn ƒë·ªÉ tƒÉng s·ª©c ƒë·ªÅ kh√°ng. ƒê√≥ng g√≥i ƒë·∫πp.');

